 **Summary**: The author presents a novel method for localizing a group of robots given an incomplete set of distance measurements between pairs of robots. The algorithm proposed combines several techniques in relative localization literature: it uses a Riemannian elevator to produce an initial guess of robot locations, refines the locations at every timestep by minimizing Kruskal's stress fuction, and estimates the full state vector given the estimated locations with an extended Kalman filter. 
 
 Notably, as the stress fuction is non-convex and non-smooth, there are no algorithms to solve it to global optimality, but Kruskal has proposed a gradient descent framework that, with a particular step size, finds good solutions. Results are provided on small and large tracking problems, where the robots periodically move in their respective directions. These results show that Kruskal's gradient descent algorithm outperforms a gradient descent method with a step size of 1/sqrt(k). Also, two examples of positions estimated via the author's algorithm are shown; in both cases, the final, refined estimate is very close to the actual position. 
 
 **Strengths**: The author combines many existing localization techniques to develop a very accurate distance-based localization algorithm. The literature review section is well-written and indicates a solid and detailed understanding of the methods currently being used. The results are impressive, and it seems they required implementation of multiple sophisticated algorithms. Also, the plots and figures are clear, informative, and aesthetically pleasing. Particularly, the position estimation examples give a good sense of how accurate the proposed algorithm is. 
 
 **Suggestions and Questions**: The proposed method section could be made a little clearer. I'd start off with a high-level summary of the main components of the algorithm so that the reader has a mental roadmap of the section. In the state-space subsection, zt should be defined before equations (4,5). It might also make sense to define and briefly explain the Kalman filter updates in the state-space subsection, and refer to this section in the EKF portion of Algorithm 1. There is a lot of notation related to the EKF that is introduced in Algorithm 1, which can be hard to parse for those not familiar with Kalman filters. In the results section, what is the cost being plotted? Also, the results overall look very good, and a potential extension would be to compare the 1/sqrt(k) and Kruskal step sizes for robots that are gradually moving every timestep. **Clarity/Presentation Score**: 4. The problem is described clearly, the results are presented well, and the citations appear complete, but some modifications could be made to how the proposed method is presented. **Technical Score**: 5. The technical work is impressive and mathematically correct, and the results show good performance of the algorithm.
Naomi Isabella Sagan


Clarity Comments Explain what poses are. They are referenced in figure 1 and I think they are the x terms in equation 1, but it is unclear exactly what poses are. Maybe don’t reference figure 2 in the introduction because it is introduces confusion. What is theta in equation 2? Is it some randomness in state? What is GWN in equations 8 and 9? Would be nice if you wrote out the Kalman estimate of theta. Table 1 feels out of place since you don’t talk about any of the additional definitions until section D. Label axes on graphs please. Alternative Approach To be perfectly honest, it is difficult to understand each specific part of the approach because it requires a lot of background knowledge of different algorithms that you reference in the paper. I don’t think this is a problem with the paper, more of a problem with me not knowing sufficient background in the field. However, on a macro level what you’re doing appears to make sense and the results look good. General Comments Super interesting paper. I know nothing about the field but I feel like I still got something out of the paper which was nice. I would suggest adding more clarity to the equations and acronyms referenced around the paper. In particular, sometimes it is unclear exactly what certain variables represent in different equations. This make it much harder to follow exactly what you are doing in implementation. Clarity: 4 Technical: 5

Summary: Erik's paper tackles distance estimation given limited information between robots. First, Erik uses the Riemannian Elevator to get a strong initial guess. Then Erik employs Kruskal’s gradient descent algorithm to minimize the stress function at each time t. The results look really good. Using Kruskal's descent method, Erik's algorithm converges considerably faster than using a basic 1/sqrt(k) cost gradient descent method and does a better job estimating robot positioning. Really cool project; I don't get everything that is going on, but I can understand the main ideas and its super interesting
Elijah Alexander Schacter